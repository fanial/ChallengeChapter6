plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id "com.google.protobuf" version "0.8.17"
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.fal.challengechapter6"
        minSdk 28
        targetSdk 32
        versionCode 1
        versionName "1.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions("notesfani")
    productFlavors{
        paidfeatures{
            manifestPlaceholders = [appLabel: "NotesAppPaid"]
            dimension("notesfani")
            versionCode 2
        }

        freefeatures{
            manifestPlaceholders = [appLabel: "NotesAppFree"]
            dimension("notesfani")
            versionCode 2
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.5.0-alpha04'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //    library retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    //    library GSON
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    //    library OKHTTP
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'
    //    load gambar online
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    //    Dependency Injection
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    //    livedata
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    //    Typed DataStore (Typed API surface, such as Proto)
    implementation("androidx.datastore:datastore:1.0.0")
    implementation("androidx.datastore:datastore-core:1.0.0")
    implementation  "com.google.protobuf:protobuf-javalite:3.18.0"
    //    Work Manager
    implementation("androidx.work:work-runtime-ktx:2.7.1")
    //    Image Processing
    implementation "com.github.bumptech.glide:glide:4.13.1"
    //    viewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.activity:activity-ktx:1.5.1"

    //Testing
    testImplementation "io.mockk:mockk:1.13.1"

    //Firebase
    implementation platform('com.google.firebase:firebase-bom:31.0.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx:21.1.0'
    implementation 'com.google.firebase:firebase-firestore-ktx:24.4.0'
    implementation 'com.google.android.gms:play-services-auth:20.3.0'
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:31.0.2')

    // Add the dependency for the App Check library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-appcheck-playintegrity'
}
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.14.0"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}